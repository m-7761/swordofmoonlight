
/*  0*/ DWORD_(   dwSize)                 // size of the DDDRIVERCAPS structure
/*  4*/ DWORD_(   dwCaps)                 // driver specific capabilities
DWORD_AND(DDCAPS_3D)
DWORD_AND(DDCAPS_ALIGNBOUNDARYDEST)
DWORD_AND(DDCAPS_ALIGNSIZEDEST)
DWORD_AND(DDCAPS_ALIGNBOUNDARYSRC)
DWORD_AND(DDCAPS_ALIGNSIZESRC)
DWORD_AND(DDCAPS_ALIGNSTRIDE)
DWORD_AND(DDCAPS_BLT)
DWORD_AND(DDCAPS_BLTQUEUE)
DWORD_AND(DDCAPS_BLTFOURCC)
DWORD_AND(DDCAPS_BLTSTRETCH)
DWORD_AND(DDCAPS_GDI)
DWORD_AND(DDCAPS_OVERLAY)
DWORD_AND(DDCAPS_OVERLAYCANTCLIP)
DWORD_AND(DDCAPS_OVERLAYFOURCC)
DWORD_AND(DDCAPS_OVERLAYSTRETCH)
DWORD_AND(DDCAPS_PALETTE)
DWORD_AND(DDCAPS_PALETTEVSYNC)
DWORD_AND(DDCAPS_READSCANLINE)
DWORD_AND(DDCAPS_VBI)
DWORD_AND(DDCAPS_ZBLTS)
DWORD_AND(DDCAPS_ZOVERLAYS)
DWORD_AND(DDCAPS_COLORKEY)
DWORD_AND(DDCAPS_ALPHA)
DWORD_AND(DDCAPS_COLORKEYHWASSIST)
DWORD_AND(DDCAPS_NOHARDWARE)
DWORD_AND(DDCAPS_BLTCOLORFILL)
DWORD_AND(DDCAPS_BANKSWITCHED)
DWORD_AND(DDCAPS_BLTDEPTHFILL)
DWORD_AND(DDCAPS_CANCLIP)
DWORD_AND(DDCAPS_CANCLIPSTRETCHED)
DWORD_AND(DDCAPS_CANBLTSYSMEM)
/*  8*/ DWORD_(   dwCaps2)                // more driver specific capabilites
DWORD_AND(DDCAPS2_CERTIFIED)
DWORD_AND(DDCAPS2_NO2DDURING3DSCENE)
DWORD_AND(DDCAPS2_VIDEOPORT)
DWORD_AND(DDCAPS2_AUTOFLIPOVERLAY)
DWORD_AND(DDCAPS2_CANBOBINTERLEAVED)
DWORD_AND(DDCAPS2_CANBOBNONINTERLEAVED)
DWORD_AND(DDCAPS2_COLORCONTROLOVERLAY)
DWORD_AND(DDCAPS2_COLORCONTROLPRIMARY)
DWORD_AND(DDCAPS2_CANDROPZ16BIT)
DWORD_AND(DDCAPS2_NONLOCALVIDMEM)
DWORD_AND(DDCAPS2_NONLOCALVIDMEMCAPS)
DWORD_AND(DDCAPS2_NOPAGELOCKREQUIRED)
DWORD_AND(DDCAPS2_WIDESURFACES)
DWORD_AND(DDCAPS2_CANFLIPODDEVEN)
DWORD_AND(DDCAPS2_CANBOBHARDWARE)
DWORD_AND(DDCAPS2_COPYFOURCC)
DWORD_AND(DDCAPS2_PRIMARYGAMMA)
DWORD_AND(DDCAPS2_CANRENDERWINDOWED)
DWORD_AND(DDCAPS2_CANCALIBRATEGAMMA)
DWORD_AND(DDCAPS2_FLIPINTERVAL)
DWORD_AND(DDCAPS2_FLIPNOVSYNC)
DWORD_AND(DDCAPS2_CANMANAGETEXTURE)
DWORD_AND(DDCAPS2_TEXMANINNONLOCALVIDMEM)
DWORD_AND(DDCAPS2_STEREO)
DWORD_AND(DDCAPS2_SYSTONONLOCAL_AS_SYSTOLOCAL)
DWORD_AND(DDCAPS2_CANMANAGERESOURCE)
DWORD_AND(DDCAPS2_DYNAMICTEXTURES)
/*  c*/ DWORD_(   dwCKeyCaps)             // color key capabilities of the surface
DWORD_AND(DDCKEY_COLORSPACE)
DWORD_AND(DDCKEY_DESTBLT)
DWORD_AND(DDCKEY_DESTOVERLAY)
DWORD_AND(DDCKEY_SRCBLT)
DWORD_AND(DDCKEY_SRCOVERLAY)
/* 10*/ DWORD_(   dwFXCaps)               // driver specific stretching and effects capabilites
DWORD_AND(DDFXCAPS_BLTARITHSTRETCHY)
DWORD_AND(DDFXCAPS_BLTARITHSTRETCHYN)
DWORD_AND(DDFXCAPS_BLTMIRRORLEFTRIGHT)
DWORD_AND(DDFXCAPS_BLTMIRRORUPDOWN)
DWORD_AND(DDFXCAPS_BLTROTATION)
DWORD_AND(DDFXCAPS_BLTROTATION90)
DWORD_AND(DDFXCAPS_BLTSHRINKX)
DWORD_AND(DDFXCAPS_BLTSHRINKXN)
DWORD_AND(DDFXCAPS_BLTSHRINKY)
DWORD_AND(DDFXCAPS_BLTSHRINKYN)
DWORD_AND(DDFXCAPS_BLTSTRETCHX)
DWORD_AND(DDFXCAPS_BLTSTRETCHXN)
DWORD_AND(DDFXCAPS_BLTSTRETCHY)
DWORD_AND(DDFXCAPS_BLTSTRETCHYN)
DWORD_AND(DDFXCAPS_OVERLAYARITHSTRETCHY)
DWORD_AND(DDFXCAPS_OVERLAYARITHSTRETCHYN)
DWORD_AND(DDFXCAPS_OVERLAYSHRINKX)
DWORD_AND(DDFXCAPS_OVERLAYSHRINKXN)
DWORD_AND(DDFXCAPS_OVERLAYSHRINKY)
DWORD_AND(DDFXCAPS_OVERLAYSHRINKYN)
DWORD_AND(DDFXCAPS_OVERLAYSTRETCHX)
DWORD_AND(DDFXCAPS_OVERLAYSTRETCHXN)
DWORD_AND(DDFXCAPS_OVERLAYSTRETCHY)
DWORD_AND(DDFXCAPS_OVERLAYSTRETCHYN)
DWORD_AND(DDFXCAPS_OVERLAYMIRRORLEFTRIGHT)
DWORD_AND(DDFXCAPS_OVERLAYMIRRORUPDOWN)
DWORD_AND(DDFXCAPS_OVERLAYDEINTERLACE)
DWORD_AND(DDFXCAPS_BLTALPHA)
DWORD_AND(DDFXCAPS_BLTFILTER)
DWORD_AND(DDFXCAPS_OVERLAYALPHA)
DWORD_AND(DDFXCAPS_OVERLAYFILTER)
/* 14*/ DWORD_(   dwFXAlphaCaps)          // alpha driver specific capabilities
DWORD_AND(DDFXALPHACAPS_BLTALPHAEDGEBLEND)
DWORD_AND(DDFXALPHACAPS_BLTALPHAPIXELS)
DWORD_AND(DDFXALPHACAPS_BLTALPHAPIXELSNEG)
DWORD_AND(DDFXALPHACAPS_BLTALPHASURFACES)
DWORD_AND(DDFXALPHACAPS_BLTALPHASURFACESNEG)
DWORD_AND(DDFXALPHACAPS_OVERLAYALPHAEDGEBLEND)
DWORD_AND(DDFXALPHACAPS_OVERLAYALPHAPIXELSNEG)
DWORD_AND(DDFXALPHACAPS_OVERLAYALPHASURFACES)
DWORD_AND(DDFXALPHACAPS_OVERLAYALPHASURFACESNEG)
/* 18*/ DWORD_(   dwPalCaps)              // palette capabilities
DWORD_AND(DDPCAPS_4BIT)
DWORD_AND(DDPCAPS_8BITENTRIES)
DWORD_AND(DDPCAPS_8BIT)
DWORD_AND(DDPCAPS_INITIALIZE)
DWORD_AND(DDPCAPS_PRIMARYSURFACE)
DWORD_AND(DDPCAPS_PRIMARYSURFACELEFT)
DWORD_AND(DDPCAPS_ALLOW256)
DWORD_AND(DDPCAPS_VSYNC)
DWORD_AND(DDPCAPS_1BIT)
DWORD_AND(DDPCAPS_2BIT)
DWORD_AND(DDPCAPS_ALPHA)
/* 1c*/ DWORD_(   dwSVCaps)               // stereo vision capabilities
DWORD_AND(DDSVCAPS_STEREOSEQUENTIAL)
/* 20*/ DWORD_(   dwAlphaBltConstBitDepths)       // DDBD_2,4,8
/* 24*/ DWORD_(   dwAlphaBltPixelBitDepths)       // DDBD_1,2,4,8
/* 28*/ DWORD_(   dwAlphaBltSurfaceBitDepths)     // DDBD_1,2,4,8
/* 2c*/ DWORD_(   dwAlphaOverlayConstBitDepths)   // DDBD_2,4,8
/* 30*/ DWORD_(   dwAlphaOverlayPixelBitDepths)   // DDBD_1,2,4,8
/* 34*/ DWORD_(   dwAlphaOverlaySurfaceBitDepths) // DDBD_1,2,4,8
/* 38*/ DWORD_(   dwZBufferBitDepths)             // DDBD_8,16,24,32
/* 3c*/ DWORD_(   dwVidMemTotal)          // total amount of video memory
/* 40*/ DWORD_(   dwVidMemFree)           // amount of free video memory
/* 44*/ DWORD_(   dwMaxVisibleOverlays)   // maximum number of visible overlays
/* 48*/ DWORD_(   dwCurrVisibleOverlays)  // current number of visible overlays
/* 4c*/ DWORD_(   dwNumFourCCCodes)       // number of four cc codes
/* 50*/ DWORD_(   dwAlignBoundarySrc)     // source rectangle alignment
/* 54*/ DWORD_(   dwAlignSizeSrc)         // source rectangle byte size
/* 58*/ DWORD_(   dwAlignBoundaryDest)    // dest rectangle alignment
/* 5c*/ DWORD_(   dwAlignSizeDest)        // dest rectangle byte size
/* 60*/ DWORD_(   dwAlignStrideAlign)     // stride alignment
for(int i=0;i<DD_ROP_SPACE;i++)
/* 64*/ DWORD_I(   dwRops,i)   // ROPS supported
/* 84*/ DWORD_( ddsOldCaps.dwCaps)             // Was DDSCAPS  ddsCaps. ddsCaps is of type DDSCAPS2 for DX6
DWORD_AND(DDSCAPS_ALPHA)
DWORD_AND(DDSCAPS_BACKBUFFER)
DWORD_AND(DDSCAPS_COMPLEX)
DWORD_AND(DDSCAPS_FLIP)
DWORD_AND(DDSCAPS_FRONTBUFFER)
DWORD_AND(DDSCAPS_OFFSCREENPLAIN)
DWORD_AND(DDSCAPS_OVERLAY)
DWORD_AND(DDSCAPS_PALETTE)
DWORD_AND(DDSCAPS_PRIMARYSURFACE)
DWORD_AND(DDSCAPS_SYSTEMMEMORY)
DWORD_AND(DDSCAPS_TEXTURE)
DWORD_AND(DDSCAPS_3DDEVICE)
DWORD_AND(DDSCAPS_VIDEOMEMORY)
DWORD_AND(DDSCAPS_VISIBLE)
DWORD_AND(DDSCAPS_WRITEONLY)
DWORD_AND(DDSCAPS_ZBUFFER)
DWORD_AND(DDSCAPS_OWNDC)
DWORD_AND(DDSCAPS_LIVEVIDEO)
DWORD_AND(DDSCAPS_HWCODEC)
DWORD_AND(DDSCAPS_MODEX)
DWORD_AND(DDSCAPS_MIPMAP)
DWORD_AND(DDSCAPS_ALLOCONLOAD)
DWORD_AND(DDSCAPS_VIDEOPORT)
DWORD_AND(DDSCAPS_LOCALVIDMEM)
DWORD_AND(DDSCAPS_NONLOCALVIDMEM)
DWORD_AND(DDSCAPS_STANDARDVGAMODE)
DWORD_AND(DDSCAPS_OPTIMIZED)
/* 88*/ DWORD_(   dwMinOverlayStretch)    // minimum overlay stretch factor multiplied by 1000, eg 1000 == 1.0, 1300 == 1.3
/* 8c*/ DWORD_(   dwMaxOverlayStretch)    // maximum overlay stretch factor multiplied by 1000, eg 1000 == 1.0, 1300 == 1.3
/* 90*/ DWORD_(   dwMinLiveVideoStretch)  // minimum live video stretch factor multiplied by 1000, eg 1000 == 1.0, 1300 == 1.3
/* 94*/ DWORD_(   dwMaxLiveVideoStretch)  // maximum live video stretch factor multiplied by 1000, eg 1000 == 1.0, 1300 == 1.3
/* 98*/ DWORD_(   dwMinHwCodecStretch)    // minimum hardware codec stretch factor multiplied by 1000, eg 1000 == 1.0, 1300 == 1.3
/* 9c*/ DWORD_(   dwMaxHwCodecStretch)    // maximum hardware codec stretch factor multiplied by 1000, eg 1000 == 1.0, 1300 == 1.3
/* a0*/ DWORD_(   dwReserved1)            // reserved
/* a4*/ DWORD_(   dwReserved2)            // reserved
/* a8*/ DWORD_(   dwReserved3)            // reserved
/* ac*/ DWORD_(   dwSVBCaps)              // driver specific capabilities for System->Vmem blts
/* b0*/ DWORD_(   dwSVBCKeyCaps)          // driver color key capabilities for System->Vmem blts
/* b4*/ DWORD_(   dwSVBFXCaps)            // driver FX capabilities for System->Vmem blts
for(int i=0;i<DD_ROP_SPACE;i++)
/* b8*/ DWORD_I(   dwSVBRops,i)// ROPS supported for System->Vmem blts
/* d8*/ DWORD_(   dwVSBCaps)              // driver specific capabilities for Vmem->System blts
/* dc*/ DWORD_(   dwVSBCKeyCaps)          // driver color key capabilities for Vmem->System blts
/* e0*/ DWORD_(   dwVSBFXCaps)            // driver FX capabilities for Vmem->System blts
for(int i=0;i<DD_ROP_SPACE;i++)
/* e4*/ DWORD_I(   dwVSBRops,i)// ROPS supported for Vmem->System blts
/*104*/ DWORD_(   dwSSBCaps)              // driver specific capabilities for System->System blts
/*108*/ DWORD_(   dwSSBCKeyCaps)          // driver color key capabilities for System->System blts
/*10c*/ DWORD_(   dwSSBFXCaps)            // driver FX capabilities for System->System blts
for(int i=0;i<DD_ROP_SPACE;i++)
/*110*/ DWORD_I(   dwSSBRops,i)// ROPS supported for System->System blts
/*130*/ DWORD_(   dwMaxVideoPorts)        // maximum number of usable video ports
/*134*/ DWORD_(   dwCurrVideoPorts)       // current number of video ports used
/*138*/ DWORD_(   dwSVBCaps2)             // more driver specific capabilities for System->Vmem blts
/*13c*/ DWORD_(   dwNLVBCaps)               // driver specific capabilities for non-local->local vidmem blts
/*140*/ DWORD_(   dwNLVBCaps2)              // more driver specific capabilities non-local->local vidmem blts
/*144*/ DWORD_(   dwNLVBCKeyCaps)           // driver color key capabilities for non-local->local vidmem blts
/*148*/ DWORD_(   dwNLVBFXCaps)             // driver FX capabilities for non-local->local blts
for(int i=0;i<DD_ROP_SPACE;i++)
/*14c*/ DWORD_I(   dwNLVBRops,i) // ROPS supported for non-local->local blts
// Members added for DX6 release
/*16c*/ DWORD_( ddsCaps.dwCaps)               // Surface Caps
DWORD_AND(DDSCAPS_ALPHA)
DWORD_AND(DDSCAPS_BACKBUFFER)
DWORD_AND(DDSCAPS_COMPLEX)
DWORD_AND(DDSCAPS_FLIP)
DWORD_AND(DDSCAPS_FRONTBUFFER)
DWORD_AND(DDSCAPS_OFFSCREENPLAIN)
DWORD_AND(DDSCAPS_OVERLAY)
DWORD_AND(DDSCAPS_PALETTE)
DWORD_AND(DDSCAPS_PRIMARYSURFACE)
DWORD_AND(DDSCAPS_SYSTEMMEMORY)
DWORD_AND(DDSCAPS_TEXTURE)
DWORD_AND(DDSCAPS_3DDEVICE)
DWORD_AND(DDSCAPS_VIDEOMEMORY)
DWORD_AND(DDSCAPS_VISIBLE)
DWORD_AND(DDSCAPS_WRITEONLY)
DWORD_AND(DDSCAPS_ZBUFFER)
DWORD_AND(DDSCAPS_OWNDC)
DWORD_AND(DDSCAPS_LIVEVIDEO)
DWORD_AND(DDSCAPS_HWCODEC)
DWORD_AND(DDSCAPS_MODEX)
DWORD_AND(DDSCAPS_MIPMAP)
DWORD_AND(DDSCAPS_ALLOCONLOAD)
DWORD_AND(DDSCAPS_VIDEOPORT)
DWORD_AND(DDSCAPS_LOCALVIDMEM)
DWORD_AND(DDSCAPS_NONLOCALVIDMEM)
DWORD_AND(DDSCAPS_STANDARDVGAMODE)
DWORD_AND(DDSCAPS_OPTIMIZED)
		DWORD_( ddsCaps.dwCaps2)
DWORD_AND(DDSCAPS2_HARDWAREDEINTERLACE)
DWORD_AND(DDSCAPS2_HINTDYNAMIC)
DWORD_AND(DDSCAPS2_HINTSTATIC)
DWORD_AND(DDSCAPS2_TEXTUREMANAGE)
DWORD_AND(DDSCAPS2_OPAQUE)
DWORD_AND(DDSCAPS2_HINTANTIALIASING)
DWORD_AND(DDSCAPS2_CUBEMAP)
DWORD_AND(DDSCAPS2_MIPMAPSUBLEVEL)
DWORD_AND(DDSCAPS2_D3DTEXTUREMANAGE)
DWORD_AND(DDSCAPS2_DONOTPERSIST)
DWORD_AND(DDSCAPS2_STEREOSURFACELEFT)
DWORD_AND(DDSCAPS2_VOLUME)
DWORD_AND(DDSCAPS2_NOTUSERLOCKABLE)
DWORD_AND(DDSCAPS2_POINTS)
DWORD_AND(DDSCAPS2_RTPATCHES)
DWORD_AND(DDSCAPS2_NPATCHES)
DWORD_AND(DDSCAPS2_DISCARDBACKBUFFER)
DWORD_AND(DDSCAPS2_ENABLEALPHACHANNEL)
		DWORD_( ddsCaps.dwCaps3)
DWORD_AND(DDSCAPS3_MULTISAMPLE_MASK)		
		DWORD_( ddsCaps.dwCaps4)
